[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    -p no:warnings

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    gpu: Tests requiring GPU
    asyncio: Async tests

# Coverage options (when running with pytest-cov)
# Run with: pytest --cov=app --cov-report=html --cov-report=term
[coverage:run]
source = app
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

# Asyncio configuration
asyncio_mode = auto

# Timeout for tests (in seconds)
timeout = 300
timeout_method = thread

# Environment variables for testing
[tool:pytest]
env = 
    TTS_ENGINE=csm
    LOG_LEVEL=WARNING
    CUDA_VISIBLE_DEVICES=-1